#Команда путешественников пытается переправиться через реку. У реки есть несколько притоков, которые могут впадать в нее как с левого, так и с правого берега (а иногда два притока могут впадать в реку с обеих сторон в одном месте).
#Все притоки можно задать последовательностью символов L (приток слева), R (приток справа) и B (притоки с обеих сторон в одном месте). Задача путешественников заключается в том, чтобы переправиться с левого берега на правый, преодолев все притоки, за минимальное возможное количество переправ.


lr = input()
lr_list = [0] #список притоков
for s in lr:
  lr_list.append(s)

dp_l = [0] * (len(lr_list)) # хранятся минимальные кол-во переправ слева до i притока
dp_r = [0] * (len(lr_list)) # хранятся минимальные кол-во переправ справа до i притока

dp_r[0] = 1

for i in range(1,len(lr_list)):
  # print(i,lr_list[i])
  if lr_list[i] == 'L': #если приток сзади слева
    dp_l[i] = min(dp_l[i - 1] + 1, dp_r[i - 1] + 1) #смотрим на i позицию с другой стороны и на предыдущую со своей стороны
    dp_r[i] = min(dp_r[i - 1], dp_l[i - 1] + 1)
  elif lr_list[i] == 'R': # если приток сзади справа
    dp_l[i] = min(dp_l[i - 1], dp_r[i - 1] + 1)
    dp_r[i] = min(dp_r[i - 1] + 1, dp_l[i - 1] + 1)
  elif lr_list[i] == 'B': # если притоки сзади с обоих сторон
    dp_l[i] = min(dp_l[i - 1] + 1, dp_r[i - 1] + 2)
    dp_r[i] = min(dp_r[i - 1] + 1, dp_l[i - 1] + 2)
    
#print(dp_l)
#print(dp_r)

print(dp_r[-1])
